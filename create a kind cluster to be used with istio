13  kubectl config get-contexts
   14  curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64
   15  chmod +x ./kind
   16  sudo mv ./kind /usr/local/bin/kind
   17  kind create cluster --name istio-testing
   18  kubectl config get-contexts
   19  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml
   20  kubectl create serviceaccount -n kubernetes-dashboard admin-user
   21  kubectl create clusterrolebinding -n kubernetes-dashboard admin-user --clusterrole cluster-admin --serviceaccount=kubernetes-dashboard:admin-user
   22  token=$(kubectl -n kubernetes-dashboard create token admin-user) curl -L https://istio.io/downloadIstio | sh -
   
   ###we will create an app using kubernetes manifest before that we will create a namespace 
    40  kubectl get ns
   41  kubectl create ns app
   42  kubectl label ns app istio-injection=enabled
   ###create the deployment file
    45  vi deploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: my-nginx
  name: my-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-nginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: my-nginx
    spec:
      containers:
      - image: dinup24/hello-world
        name: nginx
        ports:
        - containerPort: 8080
        resources: {}
status: {}

####to apply the deployment file

 48  kubectl apply -f deploy.yml --namespace=app
###create the service file
vi service.yml
#####
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-01-05T05:23:06Z"
  labels:
    app: my-nginx
  name: my-nginx
  namespace: app
  resourceVersion: "3418"
  uid: 526077c2-97bf-4a8a-a36c-df561bd3e6c9
spec:
  clusterIP: 10.96.47.44
  clusterIPs:
  - 10.96.47.44
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: my-nginx
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
  ####to apply the service.yml
   55  kubectl apply -f service.yml --namespace=app
   ###verify the isito injected has been added or not
   49  kubectl get deploy --namespace=app
   50  kubectl describe pod --namespace=app
#####

